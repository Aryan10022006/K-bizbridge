{"ast":null,"code":"var _jsxFileName = \"D:\\\\bizbridge-frontend\\\\src\\\\pages\\\\loginsignup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const LoginSignup = () => {\n//   const [isSignup, setIsSignup] = useState(false);\n//   const [formData, setFormData] = useState({\n//     role: \"customer\",\n//     name: \"\",\n//     email: \"\",\n//     phone:\"\",\n//     password: \"\",\n//   });\n\n//   const navigate = useNavigate(); // Hook to redirect\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const endpoint = isSignup ? \"/register\" : \"/login\";\n\n//     try {\n//       const response = await axios.post(\n//         `http://localhost:5000${endpoint}`,\n//         isSignup\n//           ? {\n//               role: formData.role,\n//               name: formData.name,\n//               email: formData.email, // Assuming email input during signup\n//               phone: formData.phone, // Assuming phone input during signup\n//               password: formData.password,\n//             }\n//           : {\n//               identifier: formData.emailOrPhone, // Unified email/phone input for login\n//               password: formData.password,\n//             }\n//       );\n\n//       console.log(response.data);\n\n//       // Redirect to dashboard based on role for successful login\n//       if (!isSignup) {\n//         const { role } = response.data;\n//         if (role === \"customer\") {\n//           navigate(\"/customer-dashboard\");\n//         } else if (role === \"merchant\") {\n//           navigate(\"/merchant-dashboard\");\n//         }\n//       } else {\n//         alert(\"Registration successful! You can now log in.\");\n//         setIsSignup(false); // Toggle back to login after signup\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(error.response?.data?.error || \"An error occurred. Please try again.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex items-center justify-center h-screen bg-gray-200\">\n//       <div className=\"w-96 bg-white p-6 shadow-md rounded-lg\">\n//         <h2 className=\"text-2xl font-bold text-center text-blue-500\">\n//           {isSignup ? \"Sign Up\" : \"Log In\"}\n//         </h2>\n//         <form className=\"mt-4\" onSubmit={handleSubmit}>\n//           {isSignup && (\n//             <>\n//               <label className=\"block text-gray-600\">Name</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.name}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, name: e.target.value })\n//                 }\n//                 required\n//               />\n//               <label className=\"block text-gray-600 mt-2\">Role</label>\n//               <select\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.role}\n//                 onChange={(e) =>\n//                   setFormData({ ...formData, role: e.target.value })\n//                 }\n//                 required\n//               >\n//                 <option value=\"customer\">Customer</option>\n//                 <option value=\"merchant\">Merchant</option>\n//               </select>\n//             </>\n//           )}\n//           <label className=\"block text-gray-600 mt-2\">\n//             {isSignup ? \"Email\" : \"Email or Phone\"}\n//           </label>\n//           <input\n//             type=\"text\"\n//             className=\"w-full p-2 border rounded-md\"\n//             value={formData.emailOrPhone}\n//             onChange={(e) =>\n//               setFormData({ ...formData, emailOrPhone: e.target.value })\n//             }\n//             required\n//           />\n//           <label className=\"block text-gray-600 mt-2\">Password</label>\n//           <input\n//             type=\"password\"\n//             className=\"w-full p-2 border rounded-md\"\n//             value={formData.password}\n//             onChange={(e) =>\n//               setFormData({ ...formData, password: e.target.value })\n//             }\n//             required\n//           />\n//           <button\n//             type=\"submit\"\n//             className=\"w-full mt-4 bg-blue-500 text-white p-2 rounded-md\"\n//           >\n//             {isSignup ? \"Sign Up\" : \"Log In\"}\n//           </button>\n//         </form>\n//         <p\n//           className=\"mt-4 text-center text-sm text-blue-500 cursor-pointer\"\n//           onClick={() => setIsSignup(!isSignup)}\n//         >\n//           {isSignup\n//             ? \"Already have an account? Log In\"\n//             : \"Don't have an account? Sign Up\"}\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n//version 2\n// // export default LoginSignup;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const LoginSignup = () => {\n//   const [isSignup, setIsSignup] = useState(false); // Toggle between signup and login\n//   const [formData, setFormData] = useState({\n//     role: \"customer\", // Default role for signup\n//     name: \"\",\n//     email: \"\",\n//     phone: \"\",\n//     emailOrPhone: \"\",\n//     password: \"\",\n//   });\n//   const [errorMessage, setErrorMessage] = useState(\"\"); // To handle errors\n\n//   const navigate = useNavigate(); // Hook for redirection\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setErrorMessage(\"\"); // Clear previous errors\n//     const endpoint = isSignup ? \"/register\" : \"/login\";\n\n//     try {\n//       const response = await axios.post(\n//         `http://localhost:5000${endpoint}`,\n//         isSignup\n//           ? {\n//               role: formData.role,\n//               name: formData.name,\n//               email: formData.email,\n//               phone: formData.phone,\n//               password: formData.password,\n//             }\n//           : {\n//               identifier: formData.emailOrPhone,\n//               password: formData.password,\n//             }\n//       );\n\n//       console.log(response.data);\n\n//       if (isSignup) {\n//         alert(\"Registration successful! You can now log in.\");\n//         setIsSignup(false); // Switch back to login view\n//       } else {\n//         const { role } = response.data;\n//         if (role === \"customer\") {\n//           navigate(\"/customer-dashboard\");\n//         } else if (role === \"merchant\") {\n//           navigate(\"/merchant-dashboard\");\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       setErrorMessage(\n//         error.response?.data?.error || \"An error occurred. Please try again.\"\n//       );\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//     setErrorMessage(\"\"); // Clear error when the user starts typing\n//   };\n\n//   return (\n//     <div className=\"flex items-center justify-center h-screen bg-gray-200\">\n//       <div className=\"w-96 bg-white p-6 shadow-md rounded-lg\">\n//         <h2 className=\"text-2xl font-bold text-center text-blue-500\">\n//           {isSignup ? \"Sign Up\" : \"Log In\"}\n//         </h2>\n//         <form className=\"mt-4\" onSubmit={handleSubmit}>\n//           {isSignup && (\n//             <>\n//               <label className=\"block text-gray-600\">Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.name}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//               <label className=\"block text-gray-600 mt-2\">Role</label>\n//               <select\n//                 name=\"role\"\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.role}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"customer\">Customer</option>\n//                 <option value=\"merchant\">Merchant</option>\n//               </select>\n//               <label className=\"block text-gray-600 mt-2\">Email</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.email}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//               <label className=\"block text-gray-600 mt-2\">Phone</label>\n//               <input\n//                 type=\"tel\"\n//                 name=\"phone\"\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.phone}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </>\n//           )}\n//           {!isSignup && (\n//             <>\n//               <label className=\"block text-gray-600 mt-2\">Email or Phone</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"emailOrPhone\"\n//                 className=\"w-full p-2 border rounded-md\"\n//                 value={formData.emailOrPhone}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </>\n//           )}\n//           <label className=\"block text-gray-600 mt-2\">Password</label>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             className=\"w-full p-2 border rounded-md\"\n//             value={formData.password}\n//             onChange={handleInputChange}\n//             required\n//           />\n//           {errorMessage && (\n//             <p className=\"text-red-500 text-sm mt-2\">{errorMessage}</p>\n//           )}\n//           <button\n//             type=\"submit\"\n//             className=\"w-full mt-4 bg-blue-500 text-white p-2 rounded-md\"\n//           >\n//             {isSignup ? \"Sign Up\" : \"Log In\"}\n//           </button>\n//         </form>\n//         <p\n//           className=\"mt-4 text-center text-sm text-blue-500 cursor-pointer\"\n//           onClick={() => setIsSignup(!isSignup)}\n//         >\n//           {isSignup\n//             ? \"Already have an account? Log In\"\n//             : \"Don't have an account? Sign Up\"}\n//         </p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LoginSignup;\n\n//version 3\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginSignup = () => {\n  _s();\n  const [isSignup, setIsSignup] = useState(false);\n  const [formData, setFormData] = useState({\n    role: \"customer\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    emailOrPhone: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate(); // Redirect\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\"); // Reset error message\n\n    const endpoint = isSignup ? \"/register\" : \"/login\";\n    const data = isSignup ? {\n      role: formData.role,\n      name: formData.name,\n      email: formData.email,\n      phone: formData.phone,\n      password: formData.password\n    } : {};\n    try {\n      let response;\n      if (isSignup) {\n        // Handle registration (POST)\n        response = await axios.post(`http://localhost:5000${endpoint}`, data);\n        alert(\"Registration successful! You can now log in.\");\n        setIsSignup(false);\n      } else {\n        // Handle login (GET)\n        const {\n          emailOrPhone,\n          password\n        } = formData;\n        response = await axios.get(`http://localhost:5000${endpoint}`, {\n          params: {\n            identifier: emailOrPhone,\n            password\n          }\n        });\n        const {\n          role,\n          uniqueId\n        } = response.data;\n        if (role === \"customer\") {\n          navigate(\"/customer-dashboard\");\n        } else if (role === \"merchant\") {\n          navigate(\"/merchant-dashboard\");\n        }\n      }\n      console.log(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error:\", error);\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"An error occurred. Please try again.\");\n    }\n  };\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setErrorMessage(\"\"); // Clear error when the user starts typing\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-96 bg-white p-6 shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center text-blue-600\",\n        children: isSignup ? \"Sign Up\" : \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mt-4\",\n        onSubmit: handleSubmit,\n        children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-600\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            className: \"w-full p-2 border rounded-md\",\n            value: formData.name,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-600 mt-2\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            className: \"w-full p-2 border rounded-md\",\n            value: formData.role,\n            onChange: handleInputChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"customer\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"merchant\",\n              children: \"Merchant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-600 mt-2\",\n          children: isSignup ? \"Email\" : \"Email or Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"emailOrPhone\",\n          className: \"w-full p-2 border rounded-md\",\n          value: formData.emailOrPhone,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-600 mt-2\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"w-full p-2 border rounded-md\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-sm mt-2\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full mt-4 bg-blue-600 text-white p-2 rounded-md\",\n          children: isSignup ? \"Sign Up\" : \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-center text-sm text-blue-500 cursor-pointer\",\n        onClick: () => setIsSignup(!isSignup),\n        children: isSignup ? \"Already have an account? Log In\" : \"Don't have an account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"dY8OlriNu0wCyy5GzFxp33tLwho=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginSignup","_s","isSignup","setIsSignup","formData","setFormData","role","name","email","phone","password","emailOrPhone","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","endpoint","data","response","post","alert","get","params","identifier","uniqueId","console","log","error","_error$response","_error$response$data","handleInputChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/bizbridge-frontend/src/pages/loginsignup.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const LoginSignup = () => {\r\n//   const [isSignup, setIsSignup] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     role: \"customer\",\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     phone:\"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const navigate = useNavigate(); // Hook to redirect\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const endpoint = isSignup ? \"/register\" : \"/login\";\r\n\r\n//     try {\r\n//       const response = await axios.post(\r\n//         `http://localhost:5000${endpoint}`,\r\n//         isSignup\r\n//           ? {\r\n//               role: formData.role,\r\n//               name: formData.name,\r\n//               email: formData.email, // Assuming email input during signup\r\n//               phone: formData.phone, // Assuming phone input during signup\r\n//               password: formData.password,\r\n//             }\r\n//           : {\r\n//               identifier: formData.emailOrPhone, // Unified email/phone input for login\r\n//               password: formData.password,\r\n//             }\r\n//       );\r\n\r\n//       console.log(response.data);\r\n\r\n//       // Redirect to dashboard based on role for successful login\r\n//       if (!isSignup) {\r\n//         const { role } = response.data;\r\n//         if (role === \"customer\") {\r\n//           navigate(\"/customer-dashboard\");\r\n//         } else if (role === \"merchant\") {\r\n//           navigate(\"/merchant-dashboard\");\r\n//         }\r\n//       } else {\r\n//         alert(\"Registration successful! You can now log in.\");\r\n//         setIsSignup(false); // Toggle back to login after signup\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(error.response?.data?.error || \"An error occurred. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center h-screen bg-gray-200\">\r\n//       <div className=\"w-96 bg-white p-6 shadow-md rounded-lg\">\r\n//         <h2 className=\"text-2xl font-bold text-center text-blue-500\">\r\n//           {isSignup ? \"Sign Up\" : \"Log In\"}\r\n//         </h2>\r\n//         <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n//           {isSignup && (\r\n//             <>\r\n//               <label className=\"block text-gray-600\">Name</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.name}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, name: e.target.value })\r\n//                 }\r\n//                 required\r\n//               />\r\n//               <label className=\"block text-gray-600 mt-2\">Role</label>\r\n//               <select\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.role}\r\n//                 onChange={(e) =>\r\n//                   setFormData({ ...formData, role: e.target.value })\r\n//                 }\r\n//                 required\r\n//               >\r\n//                 <option value=\"customer\">Customer</option>\r\n//                 <option value=\"merchant\">Merchant</option>\r\n//               </select>\r\n//             </>\r\n//           )}\r\n//           <label className=\"block text-gray-600 mt-2\">\r\n//             {isSignup ? \"Email\" : \"Email or Phone\"}\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"w-full p-2 border rounded-md\"\r\n//             value={formData.emailOrPhone}\r\n//             onChange={(e) =>\r\n//               setFormData({ ...formData, emailOrPhone: e.target.value })\r\n//             }\r\n//             required\r\n//           />\r\n//           <label className=\"block text-gray-600 mt-2\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             className=\"w-full p-2 border rounded-md\"\r\n//             value={formData.password}\r\n//             onChange={(e) =>\r\n//               setFormData({ ...formData, password: e.target.value })\r\n//             }\r\n//             required\r\n//           />\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"w-full mt-4 bg-blue-500 text-white p-2 rounded-md\"\r\n//           >\r\n//             {isSignup ? \"Sign Up\" : \"Log In\"}\r\n//           </button>\r\n//         </form>\r\n//         <p\r\n//           className=\"mt-4 text-center text-sm text-blue-500 cursor-pointer\"\r\n//           onClick={() => setIsSignup(!isSignup)}\r\n//         >\r\n//           {isSignup\r\n//             ? \"Already have an account? Log In\"\r\n//             : \"Don't have an account? Sign Up\"}\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//version 2\r\n// // export default LoginSignup;\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const LoginSignup = () => {\r\n//   const [isSignup, setIsSignup] = useState(false); // Toggle between signup and login\r\n//   const [formData, setFormData] = useState({\r\n//     role: \"customer\", // Default role for signup\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     phone: \"\",\r\n//     emailOrPhone: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [errorMessage, setErrorMessage] = useState(\"\"); // To handle errors\r\n\r\n//   const navigate = useNavigate(); // Hook for redirection\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setErrorMessage(\"\"); // Clear previous errors\r\n//     const endpoint = isSignup ? \"/register\" : \"/login\";\r\n\r\n//     try {\r\n//       const response = await axios.post(\r\n//         `http://localhost:5000${endpoint}`,\r\n//         isSignup\r\n//           ? {\r\n//               role: formData.role,\r\n//               name: formData.name,\r\n//               email: formData.email,\r\n//               phone: formData.phone,\r\n//               password: formData.password,\r\n//             }\r\n//           : {\r\n//               identifier: formData.emailOrPhone,\r\n//               password: formData.password,\r\n//             }\r\n//       );\r\n\r\n//       console.log(response.data);\r\n\r\n//       if (isSignup) {\r\n//         alert(\"Registration successful! You can now log in.\");\r\n//         setIsSignup(false); // Switch back to login view\r\n//       } else {\r\n//         const { role } = response.data;\r\n//         if (role === \"customer\") {\r\n//           navigate(\"/customer-dashboard\");\r\n//         } else if (role === \"merchant\") {\r\n//           navigate(\"/merchant-dashboard\");\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       setErrorMessage(\r\n//         error.response?.data?.error || \"An error occurred. Please try again.\"\r\n//       );\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//     setErrorMessage(\"\"); // Clear error when the user starts typing\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex items-center justify-center h-screen bg-gray-200\">\r\n//       <div className=\"w-96 bg-white p-6 shadow-md rounded-lg\">\r\n//         <h2 className=\"text-2xl font-bold text-center text-blue-500\">\r\n//           {isSignup ? \"Sign Up\" : \"Log In\"}\r\n//         </h2>\r\n//         <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n//           {isSignup && (\r\n//             <>\r\n//               <label className=\"block text-gray-600\">Name</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.name}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//               <label className=\"block text-gray-600 mt-2\">Role</label>\r\n//               <select\r\n//                 name=\"role\"\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.role}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               >\r\n//                 <option value=\"customer\">Customer</option>\r\n//                 <option value=\"merchant\">Merchant</option>\r\n//               </select>\r\n//               <label className=\"block text-gray-600 mt-2\">Email</label>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 name=\"email\"\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.email}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//               <label className=\"block text-gray-600 mt-2\">Phone</label>\r\n//               <input\r\n//                 type=\"tel\"\r\n//                 name=\"phone\"\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.phone}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </>\r\n//           )}\r\n//           {!isSignup && (\r\n//             <>\r\n//               <label className=\"block text-gray-600 mt-2\">Email or Phone</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"emailOrPhone\"\r\n//                 className=\"w-full p-2 border rounded-md\"\r\n//                 value={formData.emailOrPhone}\r\n//                 onChange={handleInputChange}\r\n//                 required\r\n//               />\r\n//             </>\r\n//           )}\r\n//           <label className=\"block text-gray-600 mt-2\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             name=\"password\"\r\n//             className=\"w-full p-2 border rounded-md\"\r\n//             value={formData.password}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//           />\r\n//           {errorMessage && (\r\n//             <p className=\"text-red-500 text-sm mt-2\">{errorMessage}</p>\r\n//           )}\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"w-full mt-4 bg-blue-500 text-white p-2 rounded-md\"\r\n//           >\r\n//             {isSignup ? \"Sign Up\" : \"Log In\"}\r\n//           </button>\r\n//         </form>\r\n//         <p\r\n//           className=\"mt-4 text-center text-sm text-blue-500 cursor-pointer\"\r\n//           onClick={() => setIsSignup(!isSignup)}\r\n//         >\r\n//           {isSignup\r\n//             ? \"Already have an account? Log In\"\r\n//             : \"Don't have an account? Sign Up\"}\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginSignup;\r\n\r\n\r\n//version 3\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginSignup = () => {\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    role: \"customer\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    password: \"\",\r\n    emailOrPhone: \"\",\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const navigate = useNavigate(); // Redirect\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\"); // Reset error message\r\n\r\n    const endpoint = isSignup ? \"/register\" : \"/login\";\r\n    const data = isSignup\r\n      ? {\r\n          role: formData.role,\r\n          name: formData.name,\r\n          email: formData.email,\r\n          phone: formData.phone,\r\n          password: formData.password,\r\n        }\r\n      : {};\r\n\r\n    try {\r\n      let response;\r\n      if (isSignup) {\r\n        // Handle registration (POST)\r\n        response = await axios.post(`http://localhost:5000${endpoint}`, data);\r\n        alert(\"Registration successful! You can now log in.\");\r\n        setIsSignup(false);\r\n      } else {\r\n        // Handle login (GET)\r\n        const { emailOrPhone, password } = formData;\r\n        response = await axios.get(`http://localhost:5000${endpoint}`, {\r\n          params: { identifier: emailOrPhone, password },\r\n        });\r\n\r\n        const { role, uniqueId } = response.data;\r\n        if (role === \"customer\") {\r\n          navigate(\"/customer-dashboard\");\r\n        } else if (role === \"merchant\") {\r\n          navigate(\"/merchant-dashboard\");\r\n        }\r\n      }\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setErrorMessage(error.response?.data?.error || \"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    setErrorMessage(\"\"); // Clear error when the user starts typing\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen bg-gray-100\">\r\n      <div className=\"w-96 bg-white p-6 shadow-lg rounded-lg\">\r\n        <h2 className=\"text-2xl font-bold text-center text-blue-600\">\r\n          {isSignup ? \"Sign Up\" : \"Log In\"}\r\n        </h2>\r\n        <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n          {isSignup && (\r\n            <>\r\n              <label className=\"block text-gray-600\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"w-full p-2 border rounded-md\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <label className=\"block text-gray-600 mt-2\">Role</label>\r\n              <select\r\n                name=\"role\"\r\n                className=\"w-full p-2 border rounded-md\"\r\n                value={formData.role}\r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"customer\">Customer</option>\r\n                <option value=\"merchant\">Merchant</option>\r\n              </select>\r\n            </>\r\n          )}\r\n          <label className=\"block text-gray-600 mt-2\">\r\n            {isSignup ? \"Email\" : \"Email or Phone\"}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"emailOrPhone\"\r\n            className=\"w-full p-2 border rounded-md\"\r\n            value={formData.emailOrPhone}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <label className=\"block text-gray-600 mt-2\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"w-full p-2 border rounded-md\"\r\n            value={formData.password}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          {errorMessage && (\r\n            <p className=\"text-red-500 text-sm mt-2\">{errorMessage}</p>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full mt-4 bg-blue-600 text-white p-2 rounded-md\"\r\n          >\r\n            {isSignup ? \"Sign Up\" : \"Log In\"}\r\n          </button>\r\n        </form>\r\n        <p\r\n          className=\"mt-4 text-center text-sm text-blue-500 cursor-pointer\"\r\n          onClick={() => setIsSignup(!isSignup)}\r\n        >\r\n          {isSignup\r\n            ? \"Already have an account? Log In\"\r\n            : \"Don't have an account? Sign Up\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginSignup;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}