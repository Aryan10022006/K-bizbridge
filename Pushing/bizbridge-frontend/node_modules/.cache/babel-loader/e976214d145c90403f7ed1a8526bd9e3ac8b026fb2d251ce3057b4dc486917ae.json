{"ast":null,"code":"var _jsxFileName = \"D:\\\\bizbridge-frontend\\\\src\\\\components\\\\protectedroute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  role\n}) => {\n  const token = localStorage.getItem('authToken'); // Get the token\n  const userRole = localStorage.getItem('userRole'); // Get the role from localStorage\n\n  console.log('Token:', token); // Debugging\n  console.log('User Role:', userRole); // Debugging\n  console.log('Required Role:', role); // Debugging\n\n  // If no token is present, redirect to login page\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user doesn't have the required role, redirect to the forbidden page or any other page\n  if (role && userRole !== role) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/forbidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n  return children; // Render the child component (e.g., MerchantDashboard)\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","role","token","localStorage","getItem","userRole","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/bizbridge-frontend/src/components/protectedroute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children, role }) => {\r\n  const token = localStorage.getItem('authToken'); // Get the token\r\n  const userRole = localStorage.getItem('userRole'); // Get the role from localStorage\r\n  \r\n  console.log('Token:', token);  // Debugging\r\n  console.log('User Role:', userRole);  // Debugging\r\n  console.log('Required Role:', role);  // Debugging\r\n\r\n  // If no token is present, redirect to login page\r\n  if (!token) {\r\n    return <Navigate to=\"/auth\" />;\r\n  }\r\n\r\n  // If the user doesn't have the required role, redirect to the forbidden page or any other page\r\n  if (role && userRole !== role) {\r\n    return <Navigate to=\"/forbidden\" />;\r\n  }\r\n\r\n  return children;  // Render the child component (e.g., MerchantDashboard)\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;EACjD,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;EAEnDE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEL,KAAK,CAAC,CAAC,CAAE;EAC/BI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC,CAAC,CAAE;EACtCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,IAAI,CAAC,CAAC,CAAE;;EAEtC;EACA,IAAI,CAACC,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACF,QAAQ;MAACY,EAAE,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChC;;EAEA;EACA,IAAIX,IAAI,IAAII,QAAQ,KAAKJ,IAAI,EAAE;IAC7B,oBAAOH,OAAA,CAACF,QAAQ;MAACY,EAAE,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrC;EAEA,OAAOZ,QAAQ,CAAC,CAAE;AACpB,CAAC;AAACa,EAAA,GAnBId,cAAc;AAqBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}