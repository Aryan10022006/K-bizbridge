{"ast":null,"code":"var _jsxFileName = \"D:\\\\bizbridge-frontend\\\\src\\\\components\\\\ServiceDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract the dynamic ID from the URL\n  const [service, setService] = useState(null); // State to store service details\n\n  // Fetch the service details when the component loads\n  useEffect(() => {\n    const fetchService = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/services/${id}`);\n        setService(response.data);\n      } catch (error) {\n        console.error(\"Error fetching service details:\", error);\n      }\n    };\n    fetchService();\n  }, [id]);\n  if (!service) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading service details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this); // Show loading until data is fetched\n\n  // Render the service details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: service.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: service.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" $\", service.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Available Slots:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: service.slots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [slot.startTime, \" - \", slot.endTime]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceDetails, \"7vOY6bcuVmqvrwayDGM/a0a9hJY=\", false, function () {\n  return [useParams];\n});\n_c = ServiceDetails;\nexport default ServiceDetails;\nvar _c;\n$RefreshReg$(_c, \"ServiceDetails\");","map":{"version":3,"names":["useParams","useEffect","useState","axios","jsxDEV","_jsxDEV","ServiceDetails","_s","id","service","setService","fetchService","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","description","price","slots","map","slot","index","startTime","endTime","_c","$RefreshReg$"],"sources":["D:/bizbridge-frontend/src/components/ServiceDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ServiceDetails = () => {\r\n  const { id } = useParams(); // Extract the dynamic ID from the URL\r\n  const [service, setService] = useState(null); // State to store service details\r\n\r\n  // Fetch the service details when the component loads\r\n  useEffect(() => {\r\n    const fetchService = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/services/${id}`);\r\n        setService(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching service details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchService();\r\n  }, [id]);\r\n\r\n  if (!service) return <p>Loading service details...</p>; // Show loading until data is fetched\r\n\r\n  // Render the service details\r\n  return (\r\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-2xl font-bold\">{service.title}</h1>\r\n      <p>{service.description}</p>\r\n      <p>\r\n        <strong>Price:</strong> ${service.price}\r\n      </p>\r\n      <p>\r\n        <strong>Available Slots:</strong>\r\n      </p>\r\n      <ul>\r\n        {service.slots.map((slot, index) => (\r\n          <li key={index}>\r\n            {slot.startTime} - {slot.endTime}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceDetails;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,sCAAsCL,EAAE,EAAE,CAAC;QAC5EE,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,OAAO,EAAE,oBAAOJ,OAAA;IAAAY,QAAA,EAAG;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,CAAC,CAAC;;EAExD;EACA,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,8BAA8B;IAAAL,QAAA,gBAC3CZ,OAAA;MAAIiB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,EAAER,OAAO,CAACc;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvDhB,OAAA;MAAAY,QAAA,EAAIR,OAAO,CAACe;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,MAAE,EAACZ,OAAO,CAACgB,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACJhB,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAAY,QAAA,EAAQ;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACJhB,OAAA;MAAAY,QAAA,EACGR,OAAO,CAACiB,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7BxB,OAAA;QAAAY,QAAA,GACGW,IAAI,CAACE,SAAS,EAAC,KAAG,EAACF,IAAI,CAACG,OAAO;MAAA,GADzBF,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAxCID,cAAc;EAAA,QACHN,SAAS;AAAA;AAAAgC,EAAA,GADpB1B,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}